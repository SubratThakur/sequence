{"version":3,"sources":["NewGame.js","Player.js","Card.js","HandCard.js","middleScreen/NavTabs.js","middleScreen/MyInfoTab.js","middleScreen/Logs.js","middleScreen/Actions.js","middleScreen/PlayersTab.js","middleScreen/MousedOverTileTab.js","middleScreen/MainView.js","Chatbar.js","Board.js","MainApp.js","App.js","store/Store.js","serviceWorker.js","index.js"],"names":["URL","process","REACT_APP_URL","NewGame","state","game_name","game_password","username","password","selectedTab","searchGameName","gamesFound","gamesFoundSelected","joinGamePassword","joinGameUsername","joinGameUsernamePassword","formError","submitNewGame","e","preventDefault","fetch","concat","method","headers","Content-Type","body","JSON","stringify","_this","then","res","json","response","localStorage","setItem","game_id","console","log","props","history","push","joinGame","_id","error","setState","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","success","auth","keyPress","keyCode","searchForGames","data","games","removeItem","_this2","this","react_default","a","createElement","className","lib","onClick","onSubmit","required","value","onChange","_ref","target","type","placeholder","_ref2","_ref3","_ref4","_ref5","onKeyDown","length","map","game","index","key","player_info","game_state","readOnly","_ref6","_ref7","_ref8","Component","withRouter","inject","observer","Player","moving","style","backgroundColor","store","playerNumber","color","Card","boxShadow","top","bottom","id","board","name","Object","objectSpread","backgroundImage","url","onMouseLeave","clearMousedOverTile","onMouseEnter","setMousedOverTile","filter","player","i","src_Player","animated_players_move","moves","tileIndex","owned","HandCard","ref","NavTabs","selectTab","changeDropDown","dropdownExpanded","data-toggle","role","aria-haspopup","aria-expanded","gameAuthInfo","selectedPlayer","toggle","MyInfoTab","_this$props$store$get","slicedToArray","getPlayer","dice","diceOne","diceTwo","colourcode","Logs","prevProps","prevState","snapshot","div","refs","logs","scrollTop","scrollHeight","date","Date","time","toLocaleString","slice","Actions","playerIndex","startGame","playerState","jail_turns","startTurn","currentPlayerTurn","utilityChanceCardPayment","jail_state","payOutOfJail","disabled","buyTile","rejectBuyTile","payPercentTax","payFlatTax","money","endTurn","giveUp","PlayersTab","netWorthOfPlayer","liquidWorthofPlayer","scope","playersProperties","property","calculatedRent","parseInt","upgrade","upgrades","checked","mortgaged","MousedOverTileTab","tile","mousedOverTile","group","MainView","show","middleScreen_MousedOverTileTab","Fragment","middleScreen_NavTabs","middleScreen_MyInfoTab","middleScreen_Actions","middleScreen_Logs","middleScreen_PlayersTab","Chatbar","Board","gameInfo","getItem","parse","setGameAuthInfo","connectToGame","inGame","middleScreen_MainView","src_Card","src_Chatbar","src_HandCard","margin","textAlign","fontSize","MainApp","location","pathname","src_Board","RedirectHome","Redirect","to","App","Switch","Route","exact","path","component","configure","enforceActions","Store","classCallCheck","socket","io","forceNew","firstTime","emit","updatePlayerJailRolls","player_index","playerJailState","setPlayerState","rollDice","setJailState","syncPlayerJailState","syncPlayerState","movePlayer","checkTile","updatePlayerMoney","player_money","getState","enableDragDropCard","movePlayerDev","circularAdd","movingPlayer","setInterval","runInAction","shift","clearInterval","movePlayerToTile","new_position","devMoveHere","tile_position","mergeTradeData","tradeIndex","trade","trades","initiating_player","given_money","taken_money","trading_player","given_properties","forEach","propIndex","taken_properties","acceptTrade","addToLog","trade_index","rejectTrade","cancelTrade","newCurrentPlayer","findNextPlayerInGame","winningPlayer","find","winning_player","newBoard","next_player","new_board","createTrade","tradingPlayer","givenProperties","takenProperties","givenMoney","takenMoney","initiatingPlayer","payPlayer","receivingPlayer","playerTile","givingPlayer","rent","calcRentCostTile","pay_multiplier","giving_player","receiving_player","giving_player_money","receiving_player_money","newLog","doubles_rolled","updatePlayerDoublesRolled","checkAndUpdateDoublesRolled","diceSum","checkIfPlayerPassedGo","payLuxuryTax","handleModifierCard","goToJail","cost","roll","Math","floor","random","newCardIndex","newCard","last_chance_card","chance","last_chest_card","chest","playerPassedGoMoneyIncrease","utility","findNearestType","rail_road","amount","payAllPlayers","nearest","findIndex","ceil","netWorth","tile_index","tile_bought","auction","auction_tile","refreshCurrentProposingTrade","old_player","dropelem","document","getElementById","dragaccept","getElementsByClassName","interact","dropzone","accept","overlap","ondropactivate","event","item","relatedTarget","undefined","classList","add","ondropdeactivate","remove","ondragenter","ondragleave","cardinHand","initialX","initialY","dragelem","onmove","modifiers","restrictRect","restriction","endOnly","autoScroll","listeners","move","dragMoveListener","dataX","getAttribute","dataY","parseFloat","deltaX","dx","deltaY","dy","newX","newY","transform","setAttribute","upgradeProperty","property_index","downgradeProperty","socketActions","on","Notification","onclick","window","focus","mortgage_value","setGameInfo","preDiceRoll","numOwns","el","base_rent","pow","ownsAll","noneMortgaged","every","mortgageProperty","val","num","max","worth","offByOneUp","offByOneDown","hasHousesOnAny","canUpgrade","canDowngrade","sort","b","propertyIndex","currentProposingTrade","moneyGiven","moneyTaken","setCurrentProposingTrade","decorate","players","observable","computed","liquidWorth","action","setUsername","connectedFromNew","store_Store","Boolean","hostname","match","ReactDOM","render","index_module","BrowserRouter","src_App_0","requestPermission","result","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c2dde869.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\nimport {withRouter} from 'react-router-dom';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {ToastContainer, toast} from 'react-toastify';\n\nconst URL = process.env.REACT_APP_URL || \"http://localhost:3001\";\n\nclass NewGame extends Component {\n    state = {\n        game_name: \"\",\n        game_password: \"\",\n        username: \"\",\n        password: \"\",\n        selectedTab: \"create_game\",\n        searchGameName: \"\",\n        gamesFound: [],\n        gamesFoundSelected: -1,\n        joinGamePassword: \"\",\n        joinGameUsername: \"\",\n        joinGameUsernamePassword: \"\",\n        formError: \"\",\n    };\n\n    componentDidMount() {\n        localStorage.removeItem(\"username\");\n    }\n\n    submitNewGame = (e) => {\n        e.preventDefault();\n        fetch(`${URL}/create_game`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                game_name: this.state.game_name,\n                game_password: this.state.game_password,\n                username: this.state.username,\n                password: this.state.password\n            }),\n        })\n            .then(res => res.json())\n            .then(response => {\n                localStorage.setItem(\"previous_game\", JSON.stringify({\n                    game_name: this.state.game_name,\n                    game_password: this.state.game_password,\n                    username: this.state.username,\n                    password: this.state.password,\n                    game_id: response.game_id,\n                }));\n                console.log(response);\n                this.props.history.push(\"/play-game\");\n            });\n    };\n    joinGame = (e) => {\n        e.preventDefault();\n        console.log(this.state.gamesFound[this.state.gamesFoundSelected]._id);\n        fetch(`${URL}/join_game`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                game_id: this.state.gamesFound[this.state.gamesFoundSelected]._id,\n                game_password: this.state.joinGamePassword,\n                username: this.state.joinGameUsername,\n                password: this.state.joinGameUsernamePassword\n            }),\n        })\n            .then(res => res.json())\n            .then(response => {\n                console.log(response)\n                if (response.error) {\n                    this.setState({formError: response.error}, () => {\n                        if (this.state.formError === \"incorrect_game_pw\") {\n                            toast.error(\"Incorrect password for game.\", {\n                                position: \"top-right\",\n                                autoClose: 2000,\n                                hideProgressBar: false,\n                                closeOnClick: true,\n                                pauseOnHover: true,\n                                draggable: true,\n                            });\n                        } else if (this.state.formError === \"player_not_in_game\") {\n                            toast.error(\"You are not in this game.\", {\n                                position: \"top-right\",\n                                autoClose: 2000,\n                                hideProgressBar: false,\n                                closeOnClick: true,\n                                pauseOnHover: true,\n                                draggable: true,\n                            });\n                        } else if (this.state.formError === \"incorrect_player_pw\") {\n                            toast.error(\"Incorrect password for player.\", {\n                                position: \"top-right\",\n                                autoClose: 2000,\n                                hideProgressBar: false,\n                                closeOnClick: true,\n                                pauseOnHover: true,\n                                draggable: true,\n                            });\n                        }\n                    });\n                    return;\n                }\n                if (response.success) {\n                    localStorage.setItem(\"previous_game\", JSON.stringify({\n                        game_id: this.state.gamesFound[this.state.gamesFoundSelected]._id,\n                        game_name: this.state.gamesFound[this.state.gamesFoundSelected].auth.game_name,\n                        game_password: this.state.joinGamePassword,\n                        username: this.state.joinGameUsername,\n                        password: this.state.joinGameUsernamePassword,\n                    }));\n                    console.log(response);\n                    this.props.history.push(\"/play-game\");\n                }\n            });\n    };\n    keyPress = (e) => {\n        if (e.keyCode === 13) {\n            this.searchForGames();\n        }\n    };\n    searchForGames = () => {\n        this.setState({gamesFound: [], gamesFoundSelected: -1});\n        fetch(`${URL}/search_for_games?game_name=${this.state.searchGameName}`)\n            .then(res => res.json())\n            .then(data => {\n                this.setState({gamesFound: data.games});\n            })\n    };\n\n    render() {\n\n        return (\n            <div className=\"new-game-main\">\n                <ToastContainer/>\n                <ul className=\"nav nav-tabs\">\n                    <li className=\"nav-item cursor\" onClick={() => this.setState({selectedTab: \"create_game\"})}>\n                        <div className={`nav-link ${this.state.selectedTab === \"create_game\" ? \"active\" : \"\"}`}>\n                            Create Game\n                        </div>\n                    </li>\n                    <li className=\"nav-item cursor\" onClick={() => this.setState({selectedTab: \"join_game\"})}>\n                        <div className={`nav-link ${this.state.selectedTab === \"join_game\" ? \"active\" : \"\"}`}>\n                            Join Game\n                        </div>\n                    </li>\n                </ul>\n                {this.state.selectedTab === \"create_game\" && (\n                    <div className=\"create-game-input\">\n                        <form onSubmit={this.submitNewGame}>\n                            <h5>Create Game</h5>\n                            <small className=\"form-text text-muted align-self-start\">Game name</small>\n                            <input required value={this.state.game_name}\n                                   onChange={({target}) => this.setState({game_name: target.value})}\n                                   type=\"text\"\n                                   className=\"form-control\"\n                                   placeholder=\"Enter game name\"/>\n                            <small className=\"form-text text-muted align-self-start\">Game password</small>\n                            <input required value={this.state.game_password}\n                                   onChange={({target}) => this.setState({game_password: target.value})}\n                                   type=\"password\" className=\"form-control mb-2\"\n                                   placeholder=\"Password *can be simple\"/>\n                            <small className=\"form-text text-muted align-self-start\">Your name</small>\n                            <input required value={this.state.username}\n                                   onChange={({target}) => this.setState({username: target.value})}\n                                   type=\"text\" className=\"form-control mb-2\"\n                                   placeholder=\"Your name\"/>\n                            <small className=\"form-text text-muted align-self-start\">Your password</small>\n                            <input required value={this.state.password}\n                                   onChange={({target}) => this.setState({password: target.value})} type=\"password\"\n                                   className=\"form-control mb-2\"\n                                   placeholder=\"Password *can be simple\"/>\n                            <button type=\"submit\" className=\"btn btn-primary\">Create</button>\n                        </form>\n                    </div>\n                )}\n                {this.state.selectedTab === \"join_game\" && (\n                    <div className=\"create-game-input\">\n                        <h5>Join Game</h5>\n                        <small className=\"form-text text-muted align-self-start\">Search for games</small>\n                        <div className=\"input-group\">\n                            <input required value={this.state.searchGameName}\n                                   onChange={({target}) => this.setState({searchGameName: target.value})} type=\"text\"\n                                   className=\"form-control\"\n                                   placeholder=\"Search...\"\n                                   onKeyDown={this.keyPress}\n                            />\n                            <div className=\"input-group-append\">\n                                <button onClick={this.searchForGames} className=\"btn btn-outline-secondary\"\n                                        type=\"button\">\n                                    <i className=\"fas fa-search\"/>\n                                </button>\n                            </div>\n                        </div>\n                        {this.state.gamesFound.length > 0 && (\n                            <div className=\"mt-3\">\n                                <h5>Games Found</h5>\n                                <ul className=\"list-group\">\n                                    {this.state.gamesFound.map((game, index) => {\n                                        return (\n                                            <li key={game._id}\n                                                onClick={() => {\n                                                    if (this.state.gamesFoundSelected !== index) {\n                                                        this.setState({\n                                                            gamesFoundSelected: index,\n                                                            joinGamePassword: \"\",\n                                                            joinGameUsername: \"\",\n                                                            joinGameUsernamePassword: \"\",\n                                                        })\n                                                    }\n                                                }}\n                                                className=\"cursor list-group-item\">\n                                                {this.state.gamesFoundSelected !== index && (\n                                                    <div className=\"d-flex justify-content-between align-items-center\">\n                                                        <div className=\"d-flex flex-column\">\n                                                            <div>{game.auth.game_name}</div>\n                                                            <small>Created by: {game.player_info[0].username}</small>\n                                                        </div>\n                                                        <i className=\"fas fa-arrow-circle-right\"/>\n                                                    </div>\n                                                )}\n                                                {this.state.gamesFoundSelected === index && (\n                                                    <div className=\"\">\n                                                        {game.game_state === \"INVITING_PLAYERS\" && (\n                                                            <div>\n                                                                <small>Game has not started. You can still join...\n                                                                </small>\n                                                            </div>\n                                                        )}\n                                                        <form onSubmit={this.joinGame}>\n                                                            <small\n                                                                className=\"form-text text-muted align-self-start\">Game\n                                                                name\n                                                            </small>\n                                                            <input required value={game.auth.game_name}\n                                                                   type=\"text\"\n                                                                   readOnly\n                                                                   className=\"form-control\"\n                                                                   placeholder=\"Enter game name\"/>\n                                                            <small\n                                                                className=\"form-text text-muted align-self-start\">Game\n                                                                password\n                                                            </small>\n                                                            <input required value={this.state.joinGamePassword}\n                                                                   onChange={({target}) => this.setState({joinGamePassword: target.value})}\n                                                                   type=\"password\" className=\"form-control mb-2\"\n                                                                   placeholder=\"Game password\"/>\n                                                            <small\n                                                                className=\"form-text text-muted align-self-start\">Your\n                                                                name\n                                                            </small>\n                                                            <input required value={this.state.joinGameUsername}\n                                                                   onChange={({target}) => this.setState({joinGameUsername: target.value})}\n                                                                   type=\"text\" className=\"form-control mb-2\"\n                                                                   placeholder=\"Your name\"/>\n                                                            <small\n                                                                className=\"form-text text-muted align-self-start\">Your\n                                                                password\n                                                            </small>\n                                                            <input required value={this.state.joinGameUsernamePassword}\n                                                                   onChange={({target}) => this.setState({joinGameUsernamePassword: target.value})}\n                                                                   type=\"password\"\n                                                                   className=\"form-control mb-2\"\n                                                                   placeholder=\"Your game password\"/>\n                                                            <button type=\"submit\" className=\"btn btn-primary\">Join\n                                                            </button>\n                                                        </form>\n                                                    </div>\n                                                )}\n                                            </li>\n                                        )\n                                    })}\n                                </ul>\n                            </div>\n                        )}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withRouter(inject(\"store\")(observer(NewGame)));\n","import React, {Component} from 'react';\nimport {observer, inject} from 'mobx-react';\n\nclass Player extends Component {\n    render() {\n        return (\n            <div\n                className={`${this.props.moving ? \"player-moving\" : \"player\"} d-flex justify-content-center align-items-center`}\n                style={{backgroundColor: !this.props.moving ? this.props.store.game.player_info[this.props.playerNumber].color : null}}\n            >\n                {this.props.moving && (\n                    <i className=\"fas fa-circle\"/>\n                )}\n                {!this.props.moving && (\n                    <b>{this.props.playerNumber + 1}</b>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(Player));\n","import React, {Component} from 'react';\nimport {observer, inject} from 'mobx-react';\nimport Player from './Player';\n\n// import tiles from '../../server/monopoly';\n\nclass Card extends Component {\n    componentDidMount(){\n       \n    }\n    render() {\n        const boxShadow = {};\n        if (this.props.top) {\n            boxShadow.boxShadow = `0px 1px 0px 0px`\n        }\n        if (this.props.bottom) {\n            boxShadow.boxShadow = `0px -1px 0px 0px`\n        }\n\n        return (\n            <div\n                id={`${this.props.store.game.board[this.props.position].name+\"-drop-card-\"+this.props.position}`}\n                // onClick={() => this.props.store.devMoveHere(this.props.position)}\n                style={{\n                    backgroundImage: `url(${this.props.store.game.board[this.props.position].url})`,\n                    ...boxShadow,\n                }}\n                className={`drop-zone game-tile item d-flex flex-wrap align-content-between zoom justify-content-between ${this.props.store.game.board[this.props.position].name+\"-drop-card-\"+this.props.position}`}\n                onMouseLeave={this.props.store.clearMousedOverTile}\n                onMouseEnter={() => this.props.store.setMousedOverTile(this.props.position)}\n            >\n                {this.props.store.game.player_info.filter(player => player.state !== \"OUT\").filter(player => player.position === this.props.position).map((player, i) => {\n                    return <Player playerNumber={player.id} key={i}/>\n                })}\n                {this.props.store.game.animated_players_move.moves.filter(tileIndex => tileIndex === this.props.position).map((tileIndex, i) => {\n                    return <Player key={i} moving={true}/>\n                })}\n                \n                {this.props.top && this.props.store.game.board[this.props.position].owned && <div\n                    style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                    className=\"owned-square-top\"/>}\n                \n            </div>\n        );\n    }\n    \n}\n\nexport default inject(\"store\")(observer(Card));\n","import React, {Component} from 'react';\nimport {observer, inject} from 'mobx-react';\nimport Player from './Player';\nimport interact from 'interactjs'\n\n// import tiles from '../../server/monopoly';\nvar cardname = '';\nclass HandCard extends Component {\n    \n    render() {\n        const boxShadow = {};\n        cardname = this.props.store.game.board[this.props.position].name;\n        if (this.props.top) {\n            boxShadow.boxShadow = `0px 1px 0px 0px`\n        }\n        if (this.props.bottom) {\n            boxShadow.boxShadow = `0px -1px 0px 0px`\n        }\n\n        return (\n            <div\n                id={this.props.store.game.board[this.props.position].name+\"-\"+this.props.position}\n                ref={this.props.store.game.board[this.props.position].name}\n                // onClick={() => this.props.store.devMoveHere(this.props.position)}\n                style={{\n                    backgroundImage: `url(${this.props.store.game.board[this.props.position].url})`,\n                    ...boxShadow,\n                }}\n                className={`drag-card item game-tile d-flex flex-wrap align-content-between justify-content-between ${this.props.store.game.board[this.props.position].name}`}\n                onMouseLeave={this.props.store.clearMousedOverTile}\n                onMouseEnter={() => this.props.store.setMousedOverTile(this.props.position)}\n            >\n                {this.props.store.game.player_info.filter(player => player.state !== \"OUT\").filter(player => player.position === this.props.position).map((player, i) => {\n                    return <Player playerNumber={player.id} key={i}/>\n                })}\n                {this.props.store.game.animated_players_move.moves.filter(tileIndex => tileIndex === this.props.position).map((tileIndex, i) => {\n                    return <Player key={i} moving={true}/>\n                })}\n                \n                {this.props.top && this.props.store.game.board[this.props.position].owned && <div\n                    style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                    className=\"owned-square-top\"/>}\n                \n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(HandCard));\n","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass NavTabs extends Component {\n    render() {\n        return (\n            <ul className=\"nav nav-tabs\">\n                <li className=\"nav-item cursor\" onClick={() => this.props.selectTab({selectedTab: \"my_info\"})}>\n                    <div className={`nav-link ${this.props.selectedTab === \"my_info\" ? \"active\" : \"\"}`}>My\n                        Info\n                    </div>\n                </li>\n                <li className=\"nav-item dropdown cursor\"\n                    onMouseEnter={() => this.props.changeDropDown({dropdownExpanded: true})}\n                    onMouseLeave={() => this.props.changeDropDown({dropdownExpanded: false})}\n                >\n                    <div className=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\"\n                         aria-haspopup=\"true\" aria-expanded=\"false\">Players\n                    </div>\n                    <div className={`dropdown-menu ${this.props.dropdownExpanded ? \"show\" : \"\"}`}>\n                        {this.props.store.game.player_info.filter(player => player.state !== \"OUT\").length === 1 && (\n                            <div className=\"dropdown-item\">No Players</div>\n                        )}\n                        {this.props.store.game.player_info.filter(player => player.state !== \"OUT\").length > 1 && this.props.store.game.player_info.filter(player => player.state !== \"OUT\").map((player, index) => ({\n                            ...player,\n                            index\n                        })).filter(player => player.username !== this.props.store.gameAuthInfo.username).map(player =>\n                            <div onClick={() => this.props.selectTab({\n                                selectedTab: \"player_info\",\n                                selectedPlayer: player.id,\n                                dropdownExpanded: false,\n                            })} key={player.id} className=\"dropdown-item\">{player.username} - ({player.id + 1})</div>\n                        )}\n                    </div>\n                </li>\n                <li className=\"nav-item cursor float-right pos-abs right0\" onClick={() => this.props.store.toggle}>\n                    <button className=\"btn\"\n                        onClick={this.props.store.toggle}><i className=\"fa fa-home\"></i> Close</button>\n                </li>\n            </ul>\n        )\n    }\n}\n\nexport default inject(\"store\")(observer(NavTabs));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass MyInfoTab extends Component {\n    render() {\n        const [diceOne, diceTwo] = this.props.store.getPlayer.dice;\n        return (\n            <div className=\"info-tab d-flex flex-column\">\n                <div className=\"d-flex flex-row justify-content-around\">\n                    <div className=\"d-flex flex-column\">\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Username: </span>\n                            <span\n                                className=\"flex-fill\">{this.props.store.getPlayer.username}</span>\n                        </div>\n\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Colour: </span>\n                            <span\n                                className=\"flex-fill\">{this.props.store.getPlayer.colourcode}</span>\n                        </div>\n                     </div>\n                </div>\n                <div className=\"d-flex flex-row justify-content-center align-items-center dice-content\">\n                    {diceOne === 1 && <i className=\"fas fa-dice-one\"/>}\n                    {diceOne === 2 && <i className=\"fas fa-dice-two\"/>}\n                    {diceOne === 3 && <i className=\"fas fa-dice-three\"/>}\n                    {diceOne === 4 && <i className=\"fas fa-dice-four\"/>}\n                    {diceOne === 5 && <i className=\"fas fa-dice-five\"/>}\n                    {diceOne === 6 && <i className=\"fas fa-dice-six\"/>}\n                    <div className=\"space-between-dice\"/>\n                    {diceTwo === 1 && <i className=\"fas fa-dice-one\"/>}\n                    {diceTwo === 2 && <i className=\"fas fa-dice-two\"/>}\n                    {diceTwo === 3 && <i className=\"fas fa-dice-three\"/>}\n                    {diceTwo === 4 && <i className=\"fas fa-dice-four\"/>}\n                    {diceTwo === 5 && <i className=\"fas fa-dice-five\"/>}\n                    {diceTwo === 6 && <i className=\"fas fa-dice-six\"/>}\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default inject(\"store\")(observer(MyInfoTab));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass Logs extends Component {\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const div = this.refs.logs;\n        div.scrollTop = div.scrollHeight;\n    }\n\n    componentDidMount() {\n        const div = this.refs.logs;\n        div.scrollTop = div.scrollHeight;\n    }\n\n    render() {\n        return (\n            <div ref=\"logs\" className=\"logs-tab\">\n                {this.props.store.game.logs.length === 0 && (\n                    <div>No actions yet...</div>\n                )}\n                {this.props.store.game.logs.map((log, i) => {\n                    let date = new Date(log.time).toLocaleString();\n                    date = date.slice(0, -6) + date.slice(-3, date.length);\n                    return (\n                        <div key={i}>\n                            {date}: {log.log}\n                        </div>\n                    )\n                })}\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(Logs));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass Actions extends Component {\n    render() {\n        if (this.props.store.game.game_state === \"ENDED\") {\n            return (\n                <div className=\"actions-tab d-flex flex-row justify-content-center align-items-center\">\n                    Game has ended\n                </div>\n            )\n        }\n        if (this.props.store.game.game_state === \"INVITING_PLAYERS\" && this.props.store.playerIndex === 0) {\n            return (\n                <div className=\"actions-tab d-flex flex-row justify-content-center align-items-center\">\n                    <button type=\"button\"\n                            className=\"btn btn-primary\"\n                            onClick={this.props.store.startGame}>\n                        Start Game\n                    </button>\n                </div>\n            )\n        }\n        return (\n            <div className=\"actions-tab d-flex flex-row justify-content-center align-items-center\">\n                {this.props.store.playerState !== \"OUT\" && this.props.store.playerState === \"START_TURN\" && this.props.store.getPlayer.jail_turns < 3 && (\n                    <button type=\"button\" onClick={this.props.store.startTurn}\n                            className=\"btn btn-primary\">Roll Dice\n                    </button>\n                )}\n                {this.props.store.playerState === \"NOT_TURN\" && (\n                    <div>{this.props.store.currentPlayerTurn.username} is\n                        taking their turn.</div>\n                )}\n                {this.props.store.playerState === \"UTILITY_CHANCE_CARD\" && (\n                    <button type=\"button\" onClick={this.props.store.utilityChanceCardPayment}\n                            className=\"btn btn-primary\">Roll to See how much to Pay\n                    </button>\n                )}\n                {this.props.store.getPlayer.jail_state && this.props.store.playerState === \"START_TURN\" && (\n                    <button type=\"button\" onClick={this.props.store.payOutOfJail}\n                            className=\"btn btn-primary\">pay 50\n                    </button>\n                )}\n                {(this.props.store.playerState === \"BUY_TILE\" || this.props.store.playerState === \"BUY_TILE_NO_MONEY\") && (\n                    <div className=\"accept-reject-tile-buy-div d-flex justify-content-center\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <button disabled={this.props.store.playerState === \"BUY_TILE_NO_MONEY\"} type=\"button\"\n                                    className=\"btn btn-primary buy-tile-button text-center\"\n                                    onClick={this.props.store.buyTile}>\n                                Buy Tile\n                            </button>\n                            <button type=\"button\" className=\"btn btn-primary reject-buy-tile-button\"\n                                    onClick={this.props.store.rejectBuyTile}>\n                                Reject Buy\n                            </button>\n                        </div>\n                    </div>\n                )}\n                {this.props.store.playerState === \"INCOME_TAX\" && (\n                    <div>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.props.store.payPercentTax}>Pay\n                            10%\n                        </button>\n                        <button type=\"button\" className=\"btn btn-primary pay-flat-tax-button\"\n                                onClick={this.props.store.payFlatTax}>Pay\n                            $200\n                        </button>\n                    </div>\n                )}\n                {this.props.store.playerState === \"END_OF_TURN\" && (\n                    <button disabled={this.props.store.getPlayer.money < 0} type=\"button\"\n                            onClick={this.props.store.endTurn}\n                            className=\"btn btn-primary\">End Turn\n                    </button>\n                )}\n                {this.props.store.playerState === \"END_OF_TURN\" && this.props.store.getPlayer.money < 0 && (\n                    <button type=\"button\" onClick={this.props.store.giveUp}\n                            className=\"btn btn-primary\">Give Up\n                    </button>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(Actions));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass PlayersTab extends Component {\n    render() {\n        return (\n            <div>\n                <div className=\"d-flex flex-row justify-content-around\">\n                    <div className=\"d-flex flex-column\">\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Username: </span>\n                            <span\n                                className=\"flex-fill\">{this.props.store.game.player_info[this.props.player].username} - ({this.props.player + 1})</span>\n                        </div>\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Current Tile: </span>\n                            <span\n                                className=\"flex-fill\">{this.props.store.game.board[this.props.store.game.player_info[this.props.player].position].name}</span>\n                        </div>\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Out Of Jail: </span>\n                            <span className=\"flex-fill\">Nope</span>\n                        </div>\n                    </div>\n                    <div className=\"d-flex flex-column\">\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Cash: </span>\n                            <span\n                                className=\"flex-fill\">${this.props.store.game.player_info[this.props.player].money}</span>\n                        </div>\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Net Worth: </span>\n                            <span\n                                className=\"flex-fill\">${this.props.store.netWorthOfPlayer(this.props.player)}</span>\n                        </div>\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Liquid Worth: </span>\n                            <span\n                                className=\"flex-fill\">${this.props.store.liquidWorthofPlayer(this.props.player)}</span>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"d-flex justify-content-center\">\n                    <button onClick={() => this.props.selectTab({selectedTab: \"player_trade\"})} type=\"button\"\n                            className=\"btn btn-primary\"\n                            disabled={this.props.store.getPlayer.state === \"NOT_TURN\"}>\n                        Trade\n                    </button>\n                </div>\n                <div\n                    className=\"other-players-properties-tab d-flex flex-row justify-content-around other-players-properties-table\">\n                    <table className=\"table\">\n                        <thead>\n                        <tr>\n                            <th/>\n                            <th className=\"text-center\" scope=\"col\">Name</th>\n                            <th className=\"text-center\" scope=\"col\">Rent</th>\n                            <th className=\"text-center\" scope=\"col\">Upgrades</th>\n                            <th className=\"text-center\" scope=\"col\">Mortgaged?</th>\n                        </tr>\n                        </thead>\n                        <tbody className=\"\">\n                        {this.props.store.playersProperties(this.props.player).map((property, i) => {\n                            return (\n                                <tr key={i}>\n                                    <th scope=\"row\">\n                                        <div className=\"my-properties-pic\" style={{\n                                            backgroundImage: `url(${property.url})`,\n                                        }}/>\n                                    </th>\n                                    <td className=\"text-center\">{property.name}</td>\n                                    <td className=\"text-center\">{property.calculatedRent === parseInt(property.calculatedRent, 10) ? `$${property.calculatedRent}` : property.calculatedRent}</td>\n                                    {property.upgrade ?\n                                        <td className=\"text-center upgrade-col\">\n                                            <div className=\"d-flex upgrade-bar-other-player justify-content-center\">\n                                                <div\n                                                    className={`bar-component bar-component-left ${property.upgrades > 0 ? \"bar-component-filled\" : \"\"}`}/>\n                                                <div\n                                                    className={`bar-component ${property.upgrades > 1 ? \"bar-component-filled\" : \"\"}`}/>\n                                                <div\n                                                    className={`bar-component ${property.upgrades > 2 ? \"bar-component-filled\" : \"\"}`}/>\n                                                <div\n                                                    className={`bar-component ${property.upgrades > 3 ? \"bar-component-filled\" : \"\"}`}/>\n                                                <div\n                                                    className={`bar-component ${property.upgrades > 4 ? \"bar-component-filled\" : \"\"}`}/>\n                                            </div>\n                                        </td>\n                                        :\n                                        <td/>\n                                    }\n                                    <td className=\"text-center\">\n                                        <input\n                                            disabled\n                                            checked={property.mortgaged} type=\"checkbox\" className=\"double\"\n                                        />\n                                    </td>\n                                </tr>\n                            )\n                        })}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(PlayersTab));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass MousedOverTileTab extends Component {\n    state = {};\n\n    render() {\n        const tile = this.props.store.game.board[this.props.store.mousedOverTile];\n        const playersOnTile = this.props.store.game.player_info.map((player, i) => ({\n            ...player,\n            index: i\n        })).filter(player => player.state !== \"OUT\").filter(player => player.position === this.props.store.mousedOverTile);\n        let relatedTiles = [];\n        if (tile.type === \"rr\" || tile.type === \"utility\") {\n            relatedTiles = this.props.store.game.board.filter((tile, i) => tile.type === this.props.store.game.board[this.props.store.mousedOverTile].type && i !== this.props.store.mousedOverTile);\n        } else if (tile.type === \"property\") {\n            relatedTiles = this.props.store.game.board.filter((tile, i) => tile.group === this.props.store.game.board[this.props.store.mousedOverTile].group && i !== this.props.store.mousedOverTile);\n        }\n        return (\n            <div className=\"d-flex flex-column align-items-center justify-content-center tile-info-container\">\n                <div className=\"d-flex flex-row\">\n                    <div className=\"d-flex flex-column align-items-center justify-content-center\">\n                        <div className=\"tile-info-image-div\" style={{\n                            backgroundImage: `url(${tile.url})`,\n                        }}/>\n                        <div className=\"tile-info-name\">\n                            {tile.name}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(MousedOverTileTab));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\nimport NavTabs from './NavTabs';\nimport MyInfoTab from './MyInfoTab';\nimport Logs from './Logs';\nimport Actions from './Actions';\nimport PlayersTab from './PlayersTab';\nimport MousedOverTileTab from './MousedOverTileTab';\n\nclass MainView extends Component {\n    \n    state = {\n        dropdownExpanded: false,\n        selectedTab: \"my_info\",\n        selectedPlayer: 1,\n    };\n\n    selectTab = (state) => {\n        this.setState(state);\n    };\n    changeDropDown = (state) => {\n        this.setState(state);\n    };\n\n    render() {\n        return ( \n            <div className={`main-view desktop-view ${this.props.store.show? 'display-none': '' }`}>\n                {this.props.store.game && this.props.store.game.game_state !== \"NOT_STARTED\" &&\n                <div className=\"main-view-content\">\n                    {this.props.store.mousedOverTile !== null && (\n                        <MousedOverTileTab/>\n                    )}\n                    {this.props.store.mousedOverTile === null && (\n                        <>\n                            <NavTabs\n                                dropdownExpanded={this.state.dropdownExpanded}\n                                changeDropDown={this.changeDropDown}\n                                selectTab={this.selectTab}\n                                selectedTab={this.state.selectedTab}\n                            />\n                            {this.state.selectedTab === \"my_info\" && (\n                                <>\n                                    <MyInfoTab/>\n                                    <Actions/>\n                                    <Logs/>\n                                </>\n                            )}\n                            {this.state.selectedTab === \"player_info\" && (\n                                <PlayersTab selectTab={this.selectTab} player={this.state.selectedPlayer}/>\n                            )}\n                        </>\n                    )}\n\n                </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(MainView));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\nimport interact from 'interactjs'\n\nclass Chatbar extends Component {\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const div = this.refs.logs;\n        div.scrollTop = div.scrollHeight;\n    }\n\n    componentDidMount() {\n        const div = this.refs.logs;\n        div.scrollTop = div.scrollHeight;\n    }\n\n    render() {\n        return (\n            <div ref=\"logs\" className=\"chat-area chat-area-width\">\n                {this.props.store.game.logs.length === 0 && (\n                    <div>No actions yet...\n                        <button className=\"btn float-right\"\n                        onClick={this.props.store.toggle}><i className=\"fa fa-bars\"></i></button>\n                    </div>\n                )}\n                {this.props.store.game.logs.map((log, i) => {\n                    let date = new Date(log.time).toLocaleString();\n                    date = date.slice(0, -6) + date.slice(-3, date.length);\n                    return (\n                        <div key={i}>\n                            <span>{date}: {log.log}</span>\n                            <button className=\"btn float-right\"\n                        onClick={this.props.store.toggle}><i className=\"fa fa-bars\"></i></button>\n                        </div>\n                    )\n                })}\n                \n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(Chatbar));","import React, {Component} from 'react';\nimport Card from \"./Card\";\nimport HandCard from \"./HandCard\";\nimport MainView from \"./middleScreen/MainView\";\nimport \"./App.css\";\nimport {inject, observer} from \"mobx-react\";\nimport {withRouter} from 'react-router-dom';\nimport Chatbar from './Chatbar';\n\nclass Board extends Component {\n    componentDidMount() {\n        let gameInfo = localStorage.getItem(\"previous_game\");\n        if (!gameInfo) {\n            this.props.history.push(\"/start\");\n            return;\n        }\n        gameInfo = JSON.parse(gameInfo);\n        this.props.store.setGameAuthInfo(gameInfo);\n        this.props.store.connectToGame();\n        \n    }\n\n    render() {\n        return (\n            this.props.store.inGame ? <div\n                    className=\"d-flex flex-column main-box\">\n                        <MainView/>\n                    <div className=\"d-flex flex-row\">\n                        <Card position={1}/>\n                        <Card top={true} position={2}/>\n                        <Card top={true} position={3}/>\n                        <Card top={true} position={4}/>\n                        <Card top={true} position={5}/>\n                        <Card top={true} position={6}/>\n                        <Card top={true} position={7}/>\n                        <Card top={true} position={8}/>\n                        <Card top={true} position={9}/>\n                        <Card top={true} position={10}/>\n\n                    </div>\n                    <div className=\"d-flex flex-row\">\n                        <Card position={11}/>\n                        <Card top={true} position={12}/>\n                        <Card top={true} position={13}/>\n                        <Card top={true} position={14}/>\n                        <Card top={true} position={15}/>\n                        <Card top={true} position={16}/>\n                        <Card top={true} position={17}/>\n                        <Card top={true} position={18}/>\n                        <Card top={true} position={19}/>\n                        <Card top={true} position={20}/>\n                    </div>\n                    <div className=\"d-flex flex-row\">\n                        <Card position={21}/>\n                        <Card top={true} position={22}/>\n                        <Card top={true} position={23}/>\n                        <Card top={true} position={24}/>\n                        <Card top={true} position={25}/>\n                        <Card top={true} position={26}/>\n                        <Card top={true} position={27}/>\n                        <Card top={true} position={28}/>\n                        <Card top={true} position={29}/>\n                        <Card top={true} position={30}/>\n                    </div>\n                    <div className=\"d-flex flex-row\">\n                        <Card position={31}/>\n                        <Card top={true} position={32}/>\n                        <Card top={true} position={33}/>\n                        <Card top={true} position={34}/>\n                        <Card top={true} position={35}/>\n                        <Card top={true} position={36}/>\n                        <Card top={true} position={37}/>\n                        <Card top={true} position={38}/>\n                        <Card top={true} position={39}/>\n                        <Card top={true} position={40}/>\n                    </div>\n                    <div className=\"d-flex flex-row\">\n                        <Card position={41}/>\n                        <Card top={true} position={42}/>\n                        <Card top={true} position={43}/>\n                        <Card top={true} position={44}/>\n                        <Card top={true} position={45}/>\n                        <Card top={true} position={46}/>\n                        <Card top={true} position={47}/>\n                        <Card top={true} position={48}/>\n                        <Card top={true} position={49}/>\n                        <Card top={true} position={50}/>\n                    </div>\n                    <div className=\"d-flex flex-row\">\n                        <Card position={51}/>\n                        <Card top={true} position={52}/>\n                        <Card top={true} position={53}/>\n                        <Card top={true} position={54}/>\n                        <Card top={true} position={55}/>\n                        <Card top={true} position={56}/>\n                        <Card top={true} position={57}/>\n                        <Card top={true} position={58}/>\n                        <Card top={true} position={59}/>\n                        <Card top={true} position={60}/>\n                    </div>\n                    <div className=\"d-flex flex-row\">\n                        <Card position={61}/>\n                        <Card top={true} position={62}/>\n                        <Card top={true} position={63}/>\n                        <Card top={true} position={64}/>\n                        <Card top={true} position={65}/>\n                        <Card top={true} position={66}/>\n                        <Card top={true} position={67}/>\n                        <Card top={true} position={68}/>\n                        <Card top={true} position={69}/>\n                        <Card top={true} position={70}/>\n                    </div>\n                    <div className=\"d-flex flex-row\">\n                        <Card position={71}/>\n                        <Card top={true} position={72}/>\n                        <Card top={true} position={73}/>\n                        <Card top={true} position={74}/>\n                        <Card top={true} position={75}/>\n                        <Card top={true} position={76}/>\n                        <Card top={true} position={77}/>\n                        <Card top={true} position={78}/>\n                        <Card top={true} position={79}/>\n                        <Card top={true} position={80}/>\n                    </div>\n                    <div className=\"d-flex flex-row\">\n                        <Card position={81}/>\n                        <Card top={true} position={82}/>\n                        <Card top={true} position={83}/>\n                        <Card top={true} position={84}/>\n                        <Card top={true} position={85}/>\n                        <Card top={true} position={86}/>\n                        <Card top={true} position={87}/>\n                        <Card top={true} position={88}/>\n                        <Card top={true} position={89}/>\n                        <Card top={true} position={90}/>\n                    </div>\n                    <div className=\"d-flex flex-row\">\n                        <Card position={91}/>\n                        <Card top={true} position={92}/>\n                        <Card top={true} position={93}/>\n                        <Card top={true} position={94}/>\n                        <Card top={true} position={95}/>\n                        <Card top={true} position={96}/>\n                        <Card top={true} position={97}/>\n                        <Card top={true} position={98}/>\n                        <Card top={true} position={99}/>\n                        <Card top={true} position={100}/>\n                    </div>\n                    <Chatbar/>\n                    <div className=\"d-flex flex-row\">\n                        <HandCard top={true} position={92}/>\n                        <HandCard top={true} position={94}/>\n                        <HandCard top={true} position={96}/>\n                        <HandCard top={true} position={98}/>\n                        <HandCard top={true} position={99}/>\n                    </div>\n                </div>\n                :\n                <div style={{margin: \"auto\", textAlign: \"center\", fontSize: 80}}><i\n                    className=\"fas fa-spinner  fa-spin\"/></div>\n        );\n    }\n}\n\nexport default withRouter(inject(\"store\")(observer(Board)));\n","import React, {Component} from 'react';\nimport \"./App.css\";\nimport {inject, observer} from \"mobx-react\";\nimport {withRouter} from 'react-router-dom';\nimport Board from \"./Board\"\n\n\nclass MainApp extends Component {\n    state = {\n        selectedTab: this.props.history.location.pathname\n    };\n\n    render() {\n        return (\n            <div className=\"main d-flex flex-column\">\n                <Board/>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(inject(\"store\")(observer(MainApp)));\n","import React, {Component} from 'react';\nimport NewGame from \"./NewGame\";\nimport MainApp from \"./MainApp\";\nimport {Switch, Route, Redirect} from 'react-router-dom';\nimport interact from 'interactjs'\n\nconst RedirectHome = () => {\n    return (\n        <Redirect to=\"/start\"/>\n    )\n};\n\n\n\nclass App extends Component {\n\n    render() {\n        return (\n            <Switch>\n                <Route exact path=\"/play-game\" component={MainApp}/>\n                <Route exact path=\"/start\" component={NewGame}/>\n                <Route path=\"/\" component={RedirectHome}/>\n            </Switch>\n        );\n    }\n}\n\nexport default App;\n","import {decorate, configure, observable, action, computed, runInAction} from 'mobx'\n// import tiles from '../../../server/monopoly';\nimport io from 'socket.io-client';\nimport interact from 'interactjs';\n\nconfigure({enforceActions: \"observed\"});\nconst URL = process.env.REACT_APP_URL ? process.env.REACT_APP_URL : 'http://localhost:3001';\n\nclass Store {\n    socket = io(`${URL}/`, {forceNew: true});\n    mousedOverTile = null;\n    game = {};\n    show = false;\n    firstTime = true;\n    selectedTab = \"my_info\";\n    gameAuthInfo = {};\n    connectToGame = () => {\n        this.socket.emit('join_game', this.gameAuthInfo);\n    };\n    setGameAuthInfo = (gameInfo) => {\n        this.gameAuthInfo = gameInfo;\n    };\n    updatePlayerJailRolls = (playerIndex) => {\n        this.socket.emit(\"update_player_jail_rolls\", {\n            game_id: this.gameAuthInfo.game_id,\n            jail_turns: this.game.player_info[playerIndex].jail_turns,\n            player_index: playerIndex,\n        });\n    };\n    startTurn = () => {\n        if (!this.playerJailState) {\n            this.setPlayerState(\"ROLLING\");\n            this.rollDice();\n            this.movePlayer();\n            this.checkTile();\n        } else {\n            const playerIndex = this.playerIndex;\n            this.setPlayerState(\"ROLLING\");\n            this.rollDice();\n            if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n                this.setJailState(false);\n                this.syncPlayerJailState();\n                this.game.player_info[playerIndex].jail_turns = 0;\n            } else {\n                this.game.player_info[playerIndex].jail_turns += 1;\n            }\n            this.updatePlayerJailRolls(playerIndex);\n            this.setPlayerState(\"END_OF_TURN\");\n            this.syncPlayerState();\n        }\n    };\n    updatePlayerMoney = (playerIndex) => {\n        this.socket.emit(\"update_player_money\", {\n            game_id: this.gameAuthInfo.game_id,\n            player_money: this.game.player_info[playerIndex].money,\n            player_index: playerIndex,\n        });\n    };\n\n    getState = () => {\n        return this.state;\n    }\n\n    toggle = () => {\n        if(this.firstTime){\n            this.enableDragDropCard();\n        }\n        this.firstTime = false;\n        this.show = !this.show;\n    }\n\n    payOutOfJail = () => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money -= 50;\n        this.updatePlayerMoney(playerIndex);\n        this.setJailState(false);\n        this.syncPlayerJailState();\n        this.game.player_info[playerIndex].jail_turns = 0;\n        this.updatePlayerJailRolls(playerIndex);\n        if (this.getPlayer.jail_turns === 3) {\n            this.setPlayerState(\"START_TURN\");\n        } else {\n            this.setPlayerState(\"END_OF_TURN\");\n        }\n        this.syncPlayerState();\n    };\n    movePlayerDev = (position) => {\n        const playerIndex = this.playerIndex;\n        this.game.animated_players_move = {player: -1, moves: []};\n        let i = this.game.player_info[playerIndex].position;\n        while (this.circularAdd(i, 0, 39) !== this.circularAdd(position, 0, 39)) {\n            this.game.animated_players_move.moves.push(this.circularAdd(i, 1, 39));\n            i += 1;\n        }\n        this.socket.emit('move_player_animation', {\n            game_id: this.gameAuthInfo.game_id,\n            animated_players_move: this.game.animated_players_move,\n        });\n        const movingPlayer = setInterval(() => {\n            runInAction(() => {\n                this.game.animated_players_move.moves.shift();\n                if (this.game.animated_players_move.moves.length === 0) {\n                    clearInterval(movingPlayer);\n                }\n            });\n        }, 200);\n        this.game.player_info[playerIndex].position = position;\n    };\n    movePlayerToTile = (position) => {\n        const playerIndex = this.playerIndex;\n        this.game.animated_players_move = {player: -1, moves: []};\n        let i = this.game.player_info[playerIndex].position;\n        while (this.circularAdd(i, 0, 39) !== this.circularAdd(position, 0, 39)) {\n            this.game.animated_players_move.moves.push(this.circularAdd(i, 1, 39));\n            i += 1;\n        }\n        this.socket.emit('move_player_animation', {\n            game_id: this.gameAuthInfo.game_id,\n            animated_players_move: this.game.animated_players_move,\n        });\n        const movingPlayer = setInterval(() => {\n            runInAction(() => {\n                this.game.animated_players_move.moves.shift();\n                if (this.game.animated_players_move.moves.length === 0) {\n                    clearInterval(movingPlayer);\n                }\n            });\n        }, 100);\n        this.game.player_info[playerIndex].position = position;\n        this.socket.emit(\"move\", {\n            game_id: this.gameAuthInfo.game_id,\n            new_position: position,\n            player_index: playerIndex,\n        });\n    };\n    devMoveHere = (tile_position) => {\n        this.setPlayerState(\"ROLLING\");\n        this.rollDice();\n        this.movePlayerDev(tile_position);\n        this.checkTile();\n    };\n    mergeTradeData = (tradeIndex) => {\n        const trade = this.game.trades[tradeIndex];\n        this.game.player_info[trade.initiating_player].money -= parseInt(trade.given_money);\n        this.game.player_info[trade.initiating_player].money += parseInt(trade.taken_money);\n        this.game.player_info[trade.trading_player].money += parseInt(trade.given_money);\n        this.game.player_info[trade.trading_player].money -= parseInt(trade.taken_money);\n        trade.given_properties.forEach(propIndex => {\n            this.game.board[propIndex].player = trade.trading_player;\n        });\n        trade.taken_properties.forEach(propIndex => {\n            this.game.board[propIndex].player = trade.initiating_player;\n        });\n    };\n    acceptTrade = (tradeIndex) => {\n        const trade = this.game.trades[tradeIndex];\n        this.mergeTradeData(tradeIndex);\n        this.game.trades[tradeIndex].state = \"ACCEPTED\";\n        this.addToLog(`${this.game.player_info[trade.trading_player].username} accepted a trade from ${this.game.player_info[trade.initiating_player].username}`);\n        this.socket.emit(\"accept_trade\", {\n            game_id: this.gameAuthInfo.game_id,\n            trade_index: tradeIndex,\n            trade,\n        });\n\n    };\n    rejectTrade = (tradeIndex) => {\n        const trade = this.game.trades[tradeIndex];\n        this.game.trades[tradeIndex].state = \"REJECTED\";\n        this.addToLog(`${this.game.player_info[trade.trading_player].username} rejected a trade from ${this.game.player_info[trade.initiating_player].username}`);\n        this.socket.emit(\"reject_trade\", {\n            game_id: this.gameAuthInfo.game_id,\n            trade_index: tradeIndex,\n        });\n    };\n    cancelTrade = (tradeIndex) => {\n        const trade = this.game.trades[tradeIndex];\n        this.game.trades[tradeIndex].state = \"CANCELED\";\n        this.addToLog(`${this.game.player_info[trade.initiating_player].username} canceled a trade to ${this.game.player_info[trade.trading_player].username}`);\n        this.socket.emit(\"cancel_trade\", {\n            game_id: this.gameAuthInfo.game_id,\n            trade_index: tradeIndex,\n        });\n    };\n    giveUp = () => {\n        const playerIndex = this.playerIndex;\n        this.addToLog(`${this.game.player_info[playerIndex].username} gave up.`);\n        let newCurrentPlayer = this.findNextPlayerInGame(playerIndex);\n        this.game.player_info[playerIndex].state = \"OUT\";\n        if (this.game.player_info.filter(player => player.state !== \"OUT\").length === 1) {\n            const winningPlayer = this.game.player_info.find(player => player.state !== \"OUT\");\n            this.socket.emit(\"end_game\", {\n                game_id: this.gameAuthInfo.game_id,\n                winning_player: winningPlayer,\n            });\n            this.game.game_state = \"ENDED\";\n        } else {\n            const newBoard = this.game.board.map(tile => {\n                if (tile.player === playerIndex) {\n                    return {\n                        ...tile,\n                        owned: false,\n                        player: null,\n                        mortgaged: false,\n                        upgrades: 0,\n                    }\n                } else {\n                    return tile;\n                }\n            });\n            this.game.board = newBoard;\n            this.socket.emit(\"player_gives_up\", {\n                game_id: this.gameAuthInfo.game_id,\n                player_index: playerIndex,\n                next_player: newCurrentPlayer,\n                new_board: newBoard,\n            });\n        }\n    };\n    createTrade = (tradingPlayer, givenProperties, takenProperties, givenMoney, takenMoney) => {\n        this.selectedTab = \"my_info\";\n        const initiatingPlayer = this.playerIndex;\n        const trade = {\n            initiating_player: initiatingPlayer,\n            trading_player: tradingPlayer,\n            given_properties: givenProperties,\n            taken_properties: takenProperties,\n            given_money: givenMoney,\n            taken_money: takenMoney,\n            state: \"PROPOSED\",\n        };\n        this.addToLog(`${this.game.player_info[initiatingPlayer].username} initiated a trade with ${this.game.player_info[tradingPlayer].username}`);\n        this.game.trades.push(trade);\n        this.socket.emit(\"create_trade\", {\n            game_id: this.gameAuthInfo.game_id,\n            trade\n        });\n    };\n    payPlayer = () => {\n        const receivingPlayer = this.playerTile.player;\n        const givingPlayer = this.playerIndex;\n        const rent = this.calcRentCostTile(this.game.player_info[givingPlayer].position, false);\n        this.addToLog(`${this.getPlayer.username} paid ${this.game.player_info[receivingPlayer].username} $${rent} for visiting ${this.playerTile.name}.`);\n        this.game.player_info[receivingPlayer].money += rent * this.getPlayer.pay_multiplier;\n        this.game.player_info[givingPlayer].money -= rent * this.getPlayer.pay_multiplier;\n        this.game.player_info[givingPlayer].pay_multiplier = 1;\n        this.socket.emit(\"process_transaction\", {\n            game_id: this.gameAuthInfo.game_id,\n            giving_player: givingPlayer,\n            receiving_player: receivingPlayer,\n            giving_player_money: this.game.player_info[givingPlayer].money,\n            receiving_player_money: this.game.player_info[receivingPlayer].money,\n        });\n    };\n    addToLog = (log) => {\n        const newLog = {log: log, time: new Date()};\n        this.game.logs.push(newLog);\n        this.socket.emit(\"add_log\", {\n            game_id: this.gameAuthInfo.game_id,\n            log: newLog,\n        });\n    };\n    checkTile = () => {\n        const tile = this.game.board[this.getPlayer.position];\n        const playerIndex = this.playerIndex;\n        if (this.getPlayer.dice[0] !== this.getPlayer.dice[1]) {\n            this.game.player_info[playerIndex].doubles_rolled = 0;\n            this.updatePlayerDoublesRolled(playerIndex);\n        }\n        if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n            this.checkAndUpdateDoublesRolled(playerIndex);\n        }\n        if (this.getPlayer.jail_state) {\n            return;\n        }\n        this.addToLog(`${this.getPlayer.username} rolled a ${this.diceSum} (${this.getPlayer.dice[0]} - ${this.getPlayer.dice[1]}) and is now at ${tile.name}.`);\n        this.checkIfPlayerPassedGo();\n        if (tile.owned && tile.player !== playerIndex) {\n            this.payPlayer();\n            if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n                this.setPlayerState(\"START_TURN\");\n            } else {\n                this.setPlayerState(\"END_OF_TURN\");\n            }\n        } else if (!tile.owned && (tile.type === \"property\" || tile.type === \"rr\" || tile.type === \"utility\")) {\n            if (this.getPlayer.money < this.game.board[this.getPlayer.position].cost) {\n                this.setPlayerState(\"BUY_TILE_NO_MONEY\");\n            } else {\n                this.setPlayerState(\"BUY_TILE\");\n            }\n        } else if (tile.type === \"lux-tax\") {\n            this.payLuxuryTax();\n        } else if (tile.type === \"chance\" || tile.type === \"chest\") {\n            this.handleModifierCard(tile.type);\n        } else if (tile.type === \"income-tax\") {\n            this.setPlayerState(\"INCOME_TAX\");\n        } else if (tile.type === \"go-to-jail\") {\n            this.game.player_info[playerIndex].doubles_rolled = 0;\n            this.updatePlayerDoublesRolled(playerIndex);\n            this.goToJail(playerIndex);\n            this.addToLog(`${this.getPlayer.username} is going to jail :(`);\n        } else {\n            if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n                this.setPlayerState(\"START_TURN\");\n            } else {\n                this.setPlayerState(\"END_OF_TURN\");\n            }\n        }\n        this.syncPlayerState();\n    };\n    utilityChanceCardPayment = () => {\n        const roll = [\n            Math.floor(Math.random() * Math.floor(6)) + 1,\n            Math.floor(Math.random() * Math.floor(6)) + 1\n        ];\n        const rent = (roll[0] + roll[1]) * 10;\n        const receivingPlayer = this.playerTile.player;\n        const givingPlayer = this.playerIndex;\n        this.game.player_info[receivingPlayer].money += rent;\n        this.game.player_info[givingPlayer].money -= rent;\n        this.socket.emit(\"process_transaction\", {\n            game_id: this.gameAuthInfo.game_id,\n            giving_player: givingPlayer,\n            receiving_player: receivingPlayer,\n            giving_player_money: this.game.player_info[givingPlayer].money,\n            receiving_player_money: this.game.player_info[receivingPlayer].money,\n        });\n        if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n            this.setPlayerState(\"START_TURN\");\n        } else {\n            this.setPlayerState(\"END_OF_TURN\");\n        }\n        this.syncPlayerState();\n    };\n    handleModifierCard = (type) => {\n        const playerIndex = this.playerIndex;\n        let newCardIndex = 0;\n        let newCard = {};\n        if (type === \"chance\") {\n            newCardIndex = this.game.last_chance_card + 1 === this.game.chance.length ? 0 : this.game.last_chance_card + 1;\n            this.game.last_chance_card = newCardIndex;\n            newCard = this.game.chance[newCardIndex];\n        } else {\n            newCardIndex = this.game.last_chest_card + 1 === this.game.chest.length ? 0 : this.game.last_chest_card + 1;\n            this.game.last_chest_card = newCardIndex;\n            newCard = this.game.chest[newCardIndex];\n        }\n        this.addToLog(`${this.getPlayer.username} picked a card: ${newCard.name}`);\n        if (newCard.type === \"simple_move\") {\n            if (newCard.position === 0) {\n                this.playerPassedGoMoneyIncrease();\n            } else if (this.getPlayer.position > newCard.position) {\n                this.playerPassedGoMoneyIncrease();\n            }\n            this.movePlayerToTile(newCard.position);\n            this.checkTile();\n        } else if (newCard.type === \"nearest_utility\") {\n            const utility = this.findNearestType(\"utility\");\n            if (this.getPlayer.position > utility) {\n                this.playerPassedGoMoneyIncrease();\n            }\n            this.movePlayerToTile(utility);\n\n            if (this.game.board[utility].owned && this.game.board[utility].player !== playerIndex) {\n                this.setPlayerState(\"UTILITY_CHANCE_CARD\");\n                this.syncPlayerState();\n            } else {\n                this.checkTile();\n            }\n        } else if (newCard.type === \"nearest_rr\") {\n            this.game.player_info[playerIndex].pay_multiplier = 2;\n            const rail_road = this.findNearestType(\"rr\");\n            if (this.getPlayer.position > rail_road) {\n                this.playerPassedGoMoneyIncrease();\n            }\n            this.movePlayerToTile(rail_road);\n            this.checkTile();\n        } else if (newCard.type === \"simple_bank_pay\") {\n            this.game.player_info[playerIndex].money += newCard.amount;\n            this.updatePlayerMoney(playerIndex);\n            if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n                this.setPlayerState(\"START_TURN\");\n            } else {\n                this.setPlayerState(\"END_OF_TURN\");\n            }\n            this.syncPlayerState();\n        } else if (newCard.type === \"move_amount\") {\n            this.movePlayerToTile(this.getPlayer.position + newCard.amount);\n            this.checkTile();\n        } else if (newCard.type === \"go_to_jail\") {\n            this.goToJail(playerIndex);\n        } else if (newCard.type === \"pay_all_players\") {\n            this.payAllPlayers(newCard.amount);\n            if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n                this.setPlayerState(\"START_TURN\");\n            } else {\n                this.setPlayerState(\"END_OF_TURN\");\n            }\n            this.syncPlayerState();\n        }\n\n        if (type === \"chance\") {\n            this.socket.emit(\"increase_chance_card\", {\n                game_id: this.gameAuthInfo.game_id,\n                last_chance_card: newCardIndex,\n                player_index: playerIndex,\n                pay_multiplier: this.game.player_info[playerIndex].pay_multiplier,\n            });\n        } else {\n            this.socket.emit(\"increase_chest_card\", {\n                game_id: this.gameAuthInfo.game_id,\n                last_chest_card: newCardIndex,\n                player_index: playerIndex,\n                pay_multiplier: this.game.player_info[playerIndex].pay_multiplier,\n            });\n        }\n    };\n    payAllPlayers = (amount) => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money = this.game.player_info[playerIndex].money - (amount * (this.game.player_info.filter(player => player.state !== \"OUT\").length - 1));\n        this.game.player_info.forEach((player, index) => {\n            if (index !== playerIndex) {\n                player.money += amount;\n            }\n        });\n        this.socket.emit(\"pay_all_players\", {\n            game_id: this.gameAuthInfo.game_id,\n            player_index: playerIndex,\n            amount: amount,\n        });\n    };\n    findNearestType = (type) => {\n        let nearest = this.game.board.findIndex((tile, index) => {\n            if (index < this.getPlayer.position) {\n                return false;\n            }\n            return tile.type === type;\n        });\n        if (nearest === -1) { // no utilities in front\n            nearest = this.game.board.findIndex((tile) => {\n                return tile.type === type;\n            });\n        }\n        return nearest;\n    };\n    payLuxuryTax = () => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money -= 75;\n        this.updatePlayerMoney(playerIndex);\n        this.addToLog(`${this.getPlayer.username} paid $75 for tax evasion :O`);\n        if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n            this.setPlayerState(\"START_TURN\");\n        } else {\n            this.setPlayerState(\"END_OF_TURN\");\n        }\n        this.syncPlayerState();\n    };\n    payPercentTax = () => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money -= Math.ceil(this.netWorth * .10);\n        this.updatePlayerMoney(playerIndex);\n        this.addToLog(`${this.getPlayer.username} chose to pay 10% of their net worth (${Math.ceil(this.netWorth * .10)}).`);\n        if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n            this.setPlayerState(\"START_TURN\");\n        } else {\n            this.setPlayerState(\"END_OF_TURN\");\n        }\n        this.syncPlayerState();\n    };\n    payFlatTax = () => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money -= 200;\n        this.updatePlayerMoney(playerIndex);\n        this.addToLog(`${this.getPlayer.username} chose to pay $200 dollars.`);\n        if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n            this.setPlayerState(\"START_TURN\");\n        } else {\n            this.setPlayerState(\"END_OF_TURN\");\n        }\n        this.syncPlayerState();\n    };\n    goToJail = (playerIndex) => {\n        this.game.player_info[playerIndex].position = 10;\n        this.socket.emit(\"move\", {\n            game_id: this.gameAuthInfo.game_id,\n            new_position: 10,\n            player_index: playerIndex,\n        });\n        this.setJailState(true);\n        this.syncPlayerJailState();\n        this.setPlayerState(\"END_OF_TURN\");\n    };\n    checkAndUpdateDoublesRolled = (playerIndex) => {\n        this.game.player_info[playerIndex].doubles_rolled += 1;\n        if (this.game.player_info[playerIndex].doubles_rolled === 3) {\n            this.game.player_info[playerIndex].doubles_rolled = 0;\n            this.goToJail(playerIndex);\n        } else {\n            // this.setPlayerState(\"START_TURN\");\n        }\n        this.updatePlayerDoublesRolled(playerIndex);\n    };\n    updatePlayerDoublesRolled = (playerIndex) => {\n        this.socket.emit(\"update_players_doubles\", {\n            game_id: this.gameAuthInfo.game_id,\n            player_index: playerIndex,\n            doubles_rolled: this.getPlayer.doubles_rolled,\n        });\n    };\n\n    playerPassedGoMoneyIncrease = () => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money += 200;\n        this.addToLog(`${this.getPlayer.username} passed GO and earned $200!`);\n        this.socket.emit(\"update_player_money\", {\n            game_id: this.gameAuthInfo.game_id,\n            player_money: this.game.player_info[playerIndex].money,\n            player_index: playerIndex,\n        });\n    };\n    checkIfPlayerPassedGo = () => {\n        if (this.getPlayer.position - this.diceSum < 0) { //passed or on go\n            this.playerPassedGoMoneyIncrease();\n        }\n    };\n    syncPlayerJailState = () => {\n        const playerIndex = this.playerIndex;\n        this.socket.emit(\"sync_player_jail_state\", {\n            game_id: this.gameAuthInfo.game_id,\n            player_index: playerIndex,\n            jail_state: this.playerJailState,\n        });\n    };\n    syncPlayerState = () => {\n        const playerIndex = this.playerIndex;\n        this.socket.emit(\"sync_player_state\", {\n            game_id: this.gameAuthInfo.game_id,\n            player_index: playerIndex,\n            state: this.playerState,\n        });\n    };\n    buyTile = () => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money -= this.game.board[this.getPlayer.position].cost;\n        this.game.board[this.getPlayer.position].owned = true;\n        this.game.board[this.getPlayer.position].player = playerIndex;\n        this.addToLog(`${this.getPlayer.username} bought ${this.playerTile.name} for $${this.playerTile.cost}.`);\n        this.socket.emit(\"buy_tile\", {\n            game_id: this.gameAuthInfo.game_id,\n            tile_index: this.getPlayer.position,\n            tile_bought: this.game.board[this.getPlayer.position],\n            player_money: this.game.player_info[playerIndex].money,\n            player_index: playerIndex,\n        });\n        if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n            this.setPlayerState(\"START_TURN\");\n        } else {\n            this.setPlayerState(\"END_OF_TURN\");\n        }\n        this.syncPlayerState();\n    };\n    rejectBuyTile = () => {\n        this.addToLog(`${this.getPlayer.username} refused to buy ${this.playerTile.name}. Going to auction.`);\n        if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n            this.setPlayerState(\"START_TURN\");\n        } else {\n            this.setPlayerState(\"END_OF_TURN\");\n        }\n        this.socket.emit('initiate_auction', {\n            game_id: this.gameAuthInfo.game_id,\n            tile: this.getPlayer.position,\n        });\n        this.game.auction = true;\n        this.game.auction_tile = this.getPlayer.position;\n        this.syncPlayerState();\n    };\n    endTurn = () => {\n        this.refreshCurrentProposingTrade();\n        this.setPlayerState(\"NOT_TURN\");\n        const playerIndex = this.playerIndex;\n        let newCurrentPlayer = this.findNextPlayerInGame(playerIndex);\n        this.game.player_info[newCurrentPlayer].state = \"START_TURN\";\n        this.socket.emit('end_turn', {\n            game_id: this.gameAuthInfo.game_id,\n            next_player: newCurrentPlayer,\n            old_player: playerIndex,\n        });\n    };\n\n    enableDragDropCard = () => {\n        for(var i = 1; i < 100; i++){\n            this.dropelem = document.getElementById(this.game.board[i].name+\"-drop-card-\"+i);\n            this.dragaccept = document.getElementsByClassName(this.game.board[i].name);\n            interact(this.dropelem)\n                .dropzone({\n                accept: this.dragaccept,\n                overlap: 0.75,\n                ondropactivate: function (event) {\n                    const item = event.relatedTarget\n                    if(item != undefined){\n                    item.classList.add('drop-active')\n                    }\n                },\n                ondropdeactivate: function (event) {\n                    const item = event.relatedTarget\n                    if(item != undefined){\n                    item.classList.remove('drop-active', 'cannot-drop')\n                    }\n                },\n                ondragenter: function(event) {\n                    const item = event.relatedTarget\n                    if(item != undefined){\n                    item.classList.remove('cannot-drop')\n                    item.classList.add('can-drop')\n                    }\n                },\n                ondragleave: function(event) {\n                    const item = event.relatedTarget\n                    if(item != undefined){\n                    item.classList.remove('can-drop')\n                    item.classList.add('cannot-drop')\n                    }\n                }\n            }) \n        }\n        const cardinHand = [92, 94,96,98,99];\n        for(var i = 0; i < cardinHand.length; i++){\n            this.initialX = 0;\n        this.initialY = 0;\n        console.log(\"componentdidmount\")\n        this.dragelem = document.getElementById(this.game.board[cardinHand[i]].name+\"-\"+cardinHand[i]);\n        interact(this.dragelem).draggable({\n            onmove: function(event) {\n              \n            },\n            modifiers: [\n                interact.modifiers.restrictRect({\n                  restriction: 'parent',\n                  endOnly: true\n                })\n              ],\n              autoScroll: true,\n              // dragMoveListener from the dragging demo above\n              listeners: { move: this.dragMoveListener }\n          })\n        }\n    }\n    startGame = () => {\n        this.game.game_state = \"STARTED\";\n        this.socket.emit('start_game', {\n            game_id: this.gameAuthInfo.game_id,\n        });\n        this.initialX = 0;\n        this.initialY = 0;\n        this.enableDragDropCard();\n        this.toggle();\n    };\n\n    dragMoveListener = (event) => {\n      \n        // update the posiion attributes\n        const target = event.target;\n        \n        const dataX = target.getAttribute('data-x');\n        const dataY = target.getAttribute('data-y');\n        this.initialX = parseFloat(dataX) || 0;\n        this.initialY = parseFloat(dataY) || 0;\n\n        const deltaX = event.dx;\n        const deltaY = event.dy;\n\n        const newX = this.initialX + deltaX;\n        const newY = this.initialY + deltaY;\n\n        target\n        .style\n        .transform = `translate(${newX}px, ${newY}px)`;\n\n        target.setAttribute('data-x', newX);\n        target.setAttribute('data-y', newY);\n    }\n    movePlayer = () => {\n        const playerIndex = this.playerIndex;\n        this.game.animated_players_move = {player: -1, moves: []};\n        let i = 0;\n        while (i <= this.diceSum) {\n            this.game.animated_players_move.moves.push(this.circularAdd(this.game.player_info[playerIndex].position, i, 39));\n            i += 1;\n        }\n        this.socket.emit('move_player_animation', {\n            game_id: this.gameAuthInfo.game_id,\n            animated_players_move: this.game.animated_players_move,\n        });\n        const movingPlayer = setInterval(() => {\n            runInAction(() => {\n                this.game.animated_players_move.moves.shift();\n                if (this.game.animated_players_move.moves.length === 0) {\n                    clearInterval(movingPlayer);\n                }\n            });\n        }, 200);\n        this.game.player_info[playerIndex].position = this.circularAdd(this.game.player_info[playerIndex].position, this.diceSum, 39);\n        this.socket.emit(\"move\", {\n            game_id: this.gameAuthInfo.game_id,\n            new_position: this.game.player_info[playerIndex].position,\n            player_index: playerIndex,\n        });\n    };\n    upgradeProperty = (index) => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money -= this.game.board[index].upgrade;\n        this.updatePlayerMoney(playerIndex);\n        this.game.board[index].upgrades += 1;\n        this.socket.emit('tile_upgrade', {\n            game_id: this.gameAuthInfo.game_id,\n            property_index: index,\n            upgrades: this.game.board[index].upgrades,\n        });\n    };\n    downgradeProperty = (index) => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money += this.game.board[index].upgrade / 2;\n        this.updatePlayerMoney(playerIndex);\n        this.game.board[index].upgrades -= 1;\n        this.socket.emit('tile_upgrade', {\n            game_id: this.gameAuthInfo.game_id,\n            property_index: index,\n            upgrades: this.game.board[index].upgrades,\n        });\n    };\n\n    constructor() {\n        this.socket.on(\"game_info\", (data) => {\n            console.log(\"game info\", data);\n            if (data) {\n                this.setGameInfo(data);\n            }\n        });\n        this.socket.on('reconnect', () => {\n            console.log(\"reconnecting\");\n            this.connectToGame();\n        });\n        this.socketActions();\n\n    }\n\n    socketActions = () => {\n        this.socket.on(\"player_moved\", data => {\n            console.log(\"player_moved\", data);\n            runInAction(() => {\n                this.game.player_info[data.player].position = data.position;\n            });\n        });\n        this.socket.on(\"tile_bought\", data => {\n            console.log(\"tile_bought\", data);\n            runInAction(() => {\n                this.game.player_info[data.player.player_index].money = data.player.player_money;\n                this.game.board[data.tile.tile_index] = data.tile.tile;\n            });\n        });\n        this.socket.on(\"player_money_updated\", data => {\n            console.log(\"player_money_updated\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].money = data.player_money;\n            });\n        });\n        this.socket.on(\"turn_ended\", data => {\n            console.log(\"turn_ended\", data);\n            runInAction(() => {\n                if (data.next_player === this.playerIndex) {\n                    if (this.game.player_info[this.playerIndex].state === \"OUT\") {\n                        this.endTurn();\n                    } else {\n                        this.game.player_info[data.next_player].state = \"START_TURN\";\n                        this.game.player_info[data.old_player].state = \"NOT_TURN\";\n                        const notification = new Notification(\"Your turn!\");\n                        notification.onclick = () => {\n                            window.focus();\n                        };\n                    }\n                }\n            });\n        });\n        this.socket.on(\"sync_player_jail_state_synced\", data => {\n            console.log(\"sync_player_jail_state_synced\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].jail_state = data.jail_state;\n            });\n        });\n        this.socket.on(\"update_player_jail_rolls_updated\", data => {\n            console.log(\"update_player_jail_rolls_updated\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].jail_turns = data.jail_turns;\n            });\n        });\n        this.socket.on(\"transaction_processed\", data => {\n            console.log(\"transaction_processed\", data);\n            runInAction(() => {\n                this.game.player_info[data.giving_player].money = data.giving_player_money;\n                this.game.player_info[data.giving_player].pay_multiplier = 1;\n                this.game.player_info[data.receiving_player].money = data.receiving_player_money;\n            });\n        });\n        this.socket.on(\"players_doubles_updated\", data => {\n            console.log(\"players_doubles_updated\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].doubles_rolled = data.doubles_rolled;\n            });\n        });\n        this.socket.on(\"dice_roll_updated\", data => {\n            console.log(\"dice_roll_updated\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].dice = data.dice;\n            });\n        });\n        this.socket.on(\"player_state_synced\", data => {\n            console.log(\"player_state_synced\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].state = data.state;\n            });\n        });\n        this.socket.on(\"chest_card_increased\", data => {\n            console.log(\"chest_card_increased\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].pay_multiplier = data.pay_multiplier;\n                this.game.last_chest_card = data.last_chest_card;\n            });\n        });\n        this.socket.on(\"chance_card_increased\", data => {\n            console.log(\"chance_card_increased\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].pay_multiplier = data.pay_multiplier;\n                this.game.last_chance_card = data.last_chance_card;\n            });\n        });\n        this.socket.on(\"property_mortgaged\", data => {\n            console.log(\"property_mortgaged\", data);\n            runInAction(() => {\n                this.game.board[data.property_index].mortgaged = data.mortgage_value;\n            });\n        });\n        this.socket.on(\"tile_upgraded\", data => {\n            console.log(\"tile_upgraded\", data);\n            runInAction(() => {\n                this.game.board[data.property_index].upgrades = data.upgrades;\n            });\n        });\n        this.socket.on(\"trade_accepted\", data => {\n            console.log(\"trade_accepted\", data);\n            this.mergeTradeData(data.trade_index);\n            runInAction(() => {\n                this.game.trades[data.trade_index].state = \"ACCEPTED\";\n            });\n        });\n        this.socket.on(\"trade_rejected\", data => {\n            console.log(\"trade_rejected\", data);\n            runInAction(() => {\n                this.game.trades[data.trade_index].state = \"REJECTED\";\n            });\n        });\n        this.socket.on(\"auction_initiated\", data => {\n            console.log(\"trade_rejected\", data);\n            runInAction(() => {\n                this.game.auction = true;\n                this.game.auction_tile = data.tile;\n            });\n        });\n        this.socket.on(\"trade_canceled\", data => {\n            console.log(\"trade_canceled\", data);\n            runInAction(() => {\n                this.game.trades[data.trade_index].state = \"CANCELED\";\n            });\n        });\n        this.socket.on(\"trade_created\", data => {\n            console.log(\"trade_created\", data);\n            runInAction(() => {\n                this.game.trades.push(data.trade);\n            });\n        });\n        this.socket.on(\"log_added\", data => {\n            console.log(\"log_added\", data);\n            runInAction(() => {\n                this.game.logs.push(data.log);\n            });\n        });\n        this.socket.on(\"game_started\", data => {\n            console.log(\"game_started\", data);\n            runInAction(() => {\n                this.game.game_state = \"STARTED\";\n            });\n        });\n        this.socket.on(\"player_gave_up\", data => {\n            console.log(\"player_gave_up\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].state = \"OUT\";\n                this.game.player_info[data.next_player].state = \"START_TURN\";\n                this.game.board = data.new_board;\n            });\n        });\n        this.socket.on(\"game_ended\", data => {\n            console.log(\"game_ended\", data);\n            runInAction(() => {\n                this.game.game_state = \"ENDED\";\n            });\n        });\n        this.socket.on(\"animated_players_moved\", data => {\n            console.log(\"animated_players_moved\", data);\n            runInAction(() => {\n                this.game.animated_players_move = data.animated_players_move;\n                const movingPlayer = setInterval(() => {\n                    runInAction(() => {\n                        this.game.animated_players_move.moves.shift();\n                        if (this.game.animated_players_move.moves.length === 0) {\n                            clearInterval(movingPlayer);\n                        }\n                    });\n                }, 200);\n            });\n        });\n        this.socket.on(\"pay_all_players_payed\", data => {\n            console.log(\"pay_all_players_payed\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].money = this.game.player_info[data.player_index].money - (data.amount * (this.game.player_info.filter(player => player.state !== \"OUT\").length - 1));\n                this.game.player_info.forEach((player, index) => {\n                    if (index !== data.player_index) {\n                        player.money += data.amount;\n                    }\n                });\n            });\n        });\n    };\n    setGameInfo = (data) => {\n        this.game = data;\n    };\n    setMousedOverTile = (tile) => {\n        this.mousedOverTile = tile;\n    };\n    clearMousedOverTile = () => {\n        this.mousedOverTile = null;\n    };\n\n    rollDice = () => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].dice = [\n            Math.floor(Math.random() * Math.floor(6)) + 1,\n            Math.floor(Math.random() * Math.floor(6)) + 1,\n        ];\n        this.socket.emit(\"update_dice_roll\", {\n            game_id: this.gameAuthInfo.game_id,\n            dice: this.game.player_info[playerIndex].dice,\n            player_index: playerIndex,\n        });\n    };\n    calcRentCostTile = (tileIndex, preDiceRoll) => {\n        const tile = this.game.board[tileIndex];\n        if (tile.type === \"rr\") {\n            let numOwns = this.game.board.filter(el => el.type === \"rr\" && el.player === tile.player).length;\n            return tile.base_rent * Math.pow(2, numOwns - 1);\n        } else if (tile.type === \"property\") {\n            if (tile.mortgaged) {\n                return 0;\n            }\n            let ownsAll = this.game.board.filter(el => el.group === tile.group && el.player !== tile.player).length === 0;\n            let noneMortgaged = this.game.board.filter(el => el.group === tile.group).every(el => !el.mortgaged);\n            if (ownsAll && noneMortgaged) {\n                if (tile.upgrades > 0) {\n                    return tile.rent[tile.upgrades];\n                }\n                return tile.rent[0] * 2;\n            } else {\n                return tile.rent[0];\n            }\n        } else if (tile.type === \"utility\") {\n            let ownsAll = this.game.board.filter(el => el.group === tile.group && el.player !== tile.player).length === 0;\n            if (!ownsAll) {\n                if (preDiceRoll) {\n                    return \"Dice×4\";\n                }\n                return this.diceSum * 4;\n            } else {\n                if (preDiceRoll) {\n                    return \"Dice×10\";\n                }\n                return this.diceSum * 10;\n            }\n        }\n    };\n    mortgageProperty = (property) => {\n        const playerIndex = this.playerIndex;\n        if (this.game.board[property].mortgaged) {\n            this.game.player_info[playerIndex].money -= this.game.board[property].cost / 2;\n            this.updatePlayerMoney(playerIndex);\n        } else {\n            this.game.player_info[playerIndex].money += this.game.board[property].cost / 2;\n            this.updatePlayerMoney(playerIndex);\n        }\n        this.game.board[property].mortgaged = !this.game.board[property].mortgaged;\n        this.socket.emit(\"mortgage_property\", {\n            game_id: this.gameAuthInfo.game_id,\n            property_index: property,\n            mortgage_value: this.game.board[property].mortgaged,\n        });\n    };\n    circularAdd = (val, num, max) => {\n        if (val + num > max) {\n            num = num - (max - val);\n            return num - 1;\n        } else {\n            return val + num;\n        }\n    };\n\n    get diceSum() {\n        return this.getPlayer.dice[0] + this.getPlayer.dice[1];\n    }\n\n    get playerTile() {\n        return this.game.board[this.getPlayer.position];\n    }\n\n    get getPlayer() {\n        return this.game.player_info[this.playerIndex];\n    }\n\n    get inGame() {\n        if (!this.game.player_info) {\n            return false;\n        } else if (this.playerIndex === -1) {\n            return false;\n        } else {\n            return true\n        }\n    }\n\n    setPlayerState = (state) => {\n        this.game.player_info[this.playerIndex].state = state;\n    };\n    setJailState = (state) => {\n        this.game.player_info[this.playerIndex].jail_state = state;\n    };\n\n    get playerState() {\n        // if (this.gameState === \"NOT_STARTED\") {\n        //     return \"NOT_TURN\";\n        // } else {\n        return this.getPlayer.state;\n        // }\n    }\n\n    get playerJailState() {\n        // if (this.gameState === \"NOT_STARTED\") {\n        //     return false;\n        // } else {\n        return this.getPlayer.jail_state;\n        // }\n    }\n\n    netWorthOfPlayer = (playerIndex) => {\n        if (!this.game.player_info) {\n            return 0\n        }\n        let worth = this.game.player_info[playerIndex].money;\n        this.game.board.forEach(tile => {\n            if (tile.owned && tile.player === playerIndex) {\n                worth += tile.cost;\n                if (tile.upgrades) {\n                    worth += tile.upgrades * tile.upgrade;\n                }\n            }\n        });\n        return worth;\n    };\n    liquidWorthofPlayer = (playerIndex) => {\n        if (!this.game.player_info) {\n            return 0\n        }\n        let worth = this.game.player_info[playerIndex].money;\n        this.game.board.forEach(tile => {\n            if (tile.owned && tile.player === playerIndex) {\n                worth += tile.cost / 2;\n                if (tile.upgrades) {\n                    worth += tile.upgrades * (tile.upgrade / 2);\n                }\n            }\n        });\n        return worth;\n    };\n\n    get netWorth() {\n        const playerIndex = this.playerIndex;\n        let worth = this.getPlayer.money;\n        this.game.board.forEach(tile => {\n            if (tile.owned && tile.player === playerIndex) {\n                worth += tile.cost;\n                if (tile.upgrades) {\n                    worth += tile.upgrades * tile.upgrade;\n                }\n            }\n        });\n        return worth;\n    }\n\n    get liquidWorth() {\n        const playerIndex = this.playerIndex;\n        let worth = this.getPlayer.money;\n        this.game.board.forEach(tile => {\n            if (tile.owned && tile.player === playerIndex) {\n                worth += tile.cost / 2;\n                if (tile.upgrades) {\n                    worth += tile.upgrades * (tile.upgrade / 2);\n                }\n            }\n        });\n        return worth;\n    }\n\n    playersProperties = (playerIndex) => {\n        const player = this.game.player_info[playerIndex];\n        return this.game.board\n            .map((tile, i) => {\n                let ownsAll = this.game.board.filter(el => el.group === this.game.board[i].group && el.player !== this.game.board[i].player).length === 0;\n                let noneMortgaged = this.game.board.filter(el => el.group === this.game.board[i].group).every(el => !el.mortgaged);\n                let offByOneUp = this.game.board.filter(el => el.group === this.game.board[i].group).every(el => {\n                    if (tile.upgrades > el.upgrades) {\n                        return false;\n                    }\n                    return tile.upgrades < el.upgrades || tile.upgrades === el.upgrades;\n\n                });\n                let offByOneDown = this.game.board.filter(el => el.group === this.game.board[i].group).every(el => {\n                    if (tile.upgrades < el.upgrades) {\n                        return false;\n                    }\n                    return tile.upgrades > el.upgrades || tile.upgrades === el.upgrades;\n\n                });\n                const hasHousesOnAny = this.game.board.filter(el => el.group === this.game.board[i].group && el.upgrade && el.upgrades > 0).length > 0;\n                const canUpgrade = offByOneUp && ownsAll && noneMortgaged && this.game.board[i].upgrades < 5 && player.money >= this.game.board[i].upgrade;\n                const canDowngrade = offByOneDown && ownsAll && noneMortgaged && this.game.board[i].upgrades > 0;\n                let calculatedRent = this.calcRentCostTile(i, true);\n                return {...tile, index: i, canUpgrade, canDowngrade, calculatedRent, ownsAll, hasHousesOnAny}\n            })\n            .filter(tile => {\n                return tile.owned && tile.player === playerIndex;\n            })\n            .sort((a, b) => {\n                return a.group === b.group ? a.cost < b.cost ? 1 : -1 : a.type === b.type ? a.group < b.group ? -1 : 1 : a.type < b.type ? -1 : 1\n            });\n    };\n\n    get playerIndex() {\n        if (!this.game.player_info) {\n            return null;\n        }\n        return this.game.player_info.findIndex(el => el.username === this.gameAuthInfo.username);\n    }\n\n    canUpgrade = (propertyIndex) => {\n        let ownsAll = this.game.board.filter(el => el.group === this.game.board[propertyIndex].group && el.player !== this.game.board[propertyIndex].player).length === 0;\n        let noneMortgaged = this.game.board.filter(el => el.group === this.game.board[propertyIndex].group).every(el => !el.mortgaged);\n        return ownsAll && noneMortgaged && this.game.board[propertyIndex].upgrades < 3 && this.getPlayer.money >= this.game.board[propertyIndex].upgrade;\n    };\n\n    get currentPlayerTurn() {\n        const player = this.game.player_info.find(player => (player.state !== \"NOT_TURN\" && player.state !== \"OUT\"));\n        return player || {};\n    }\n\n    findNextPlayerInGame = (playerIndex) => {\n        for (let i = playerIndex; i < this.game.player_info.length * 3; i++) {\n            const player = this.game.player_info[(i % this.game.player_info.length + this.game.player_info.length) % this.game.player_info.length];\n            if (player.state !== \"OUT\" && player.id !== playerIndex) {\n                return player.id\n            }\n        }\n    };\n    refreshCurrentProposingTrade = () => {\n        this.currentProposingTrade = {\n            moneyGiven: 0,\n            moneyTaken: 0,\n            givenProperties: [],\n            takenProperties: [],\n        }\n    };\n    setCurrentProposingTrade = (key, val) => {\n        this.currentProposingTrade[key] = val;\n    };\n    currentProposingTrade = {\n        moneyGiven: 0,\n        moneyTaken: 0,\n        givenProperties: [],\n        takenProperties: [],\n    }\n}\n\ndecorate(Store, {\n    players: observable,\n    game: observable,\n    currentProposingTrade: observable,\n    // gameState: observable,\n    mousedOverTile: observable,\n    selectedTab: observable,\n    gameAuthInfo: observable,\n    show: observable,\n    diceSum: computed,\n    playerState: computed,\n    inGame: computed,\n    playerJailState: computed,\n    getPlayer: computed,\n    playerTile: computed,\n    netWorth: computed,\n    liquidWorth: computed,\n    playerIndex: computed,\n    currentPlayerTurn: computed,\n    rollDice: action,\n    refreshCurrentProposingTrade: action,\n    setCurrentProposingTrade: action,\n    setPlayerState: action,\n    movePlayerToTile: action,\n    checkTile: action,\n    payPercentTax: action,\n    payFlatTax: action,\n    goToJail: action,\n    utilityChanceCardPayment: action,\n    checkAndUpdateDoublesRolled: action,\n    setJailState: action,\n    clearMousedOverTile: action,\n    setMousedOverTile: action,\n    setUsername: action,\n    mortgageProperty: action,\n    setGameInfo: action,\n    createTrade: action,\n    payOutOfJail: action,\n    payLuxuryTax: action,\n    connectedFromNew: action,\n    movePlayerDev: action,\n    movePlayer: action,\n    payPlayer: action,\n    buyTile: action,\n    mergeTradeData: action,\n    acceptTrade: action,\n    addToLog: action,\n    startTurn: action,\n    payAllPlayers: action,\n    endTurn: action,\n    handleModifierCard: action,\n    upgradeProperty: action,\n    giveUp: action,\n    rejectTrade: action,\n    rejectBuyTile: action,\n    cancelTrade: action,\n    setGameAuthInfo: action,\n    downgradeProperty: action,\n    checkIfPlayerPassedGo: action,\n    playerPassedGoMoneyIncrease: action,\n    socketActions: action,\n    connectToGame: action,\n    startGame: action,\n    toggle: action,\n    getState: action,\n});\n\nexport default new Store();","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'mobx-react';\nimport {BrowserRouter} from 'react-router-dom';\nimport store from './store/Store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nNotification.requestPermission().then(function (result) {\n});\nserviceWorker.unregister();\n"],"sourceRoot":""}